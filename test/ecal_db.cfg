process TEST = {

         source = EmptySource {
           untracked int32 maxEvents = 1
           untracked uint32 firstRun=60123
           untracked uint32 numberEventsInRun=1
         }

         service = PoolDBOutputService{
            string connect = "sqlite_file:mydata.db"    
            string timetype = "runnumber"    
            untracked uint32 authenticationMethod = 1
            untracked string catalog = "file:mycatalog.xml"
            untracked bool loadBlobStreamer = true
            #untracked string customMappingFile = "MyMapping-custom-1.0.xml"
            untracked string customMappingFile = ""
            VPSet toPut={
                          {
                           untracked string containerName = "EcalWeightXtalGroups"
	                   untracked bool appendIOV = false
                           string tag ="EcalWeightXtalGroups_prelimininary"
                          },
                          {
                           untracked string containerName = "EcalTBWeights"
	                   untracked bool appendIOV = false
                           string tag ="EcalTBWeights_preliminary"
                          }
            }
         }

         module ecalModule = StoreEcalCondition {
            VPSet toPut={
                         {
                           untracked string conditionType = "EcalWeightXtalGroups"
                           untracked string inputFile = "/afs/cern.ch/cms/ECAL/testbeam/pedestal/2006/WEIGHTS/GroupId_SM22_example.out"
                           untracked bool appendCondition = false
                         },
                         {
                           untracked string conditionType = "EcalTBWeights"
                           untracked string inputFile = "/afs/cern.ch/cms/ECAL/testbeam/pedestal/2006/WEIGHTS/WeightsFileTB_SM22_example.out"
                           untracked bool appendCondition = false
                         }
                        }
        }

         path p = { ecalModule }

         module print = AsciiOutputModule{ }
         endpath ep = { print }

       }
